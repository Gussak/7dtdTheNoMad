# <!-- PREPARE_RELEASE:REVIEWED:OK -->
# IMPORTANT!!!!!!! EDIT ONLY BETWEEN begin and end of 'EOF' !!!!!!!!!!!!!!!
cat >>"${strFlOut}" <<EOF
      <!-- NO BLINK FOR ${strVar} ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
      <effect_group name="KEEP ON good condition for ${strVar}">
        <requirement name="CVarCompare" cvar="bGSKEnergy${strVar}" operation="Equals" value="1" />
        <requirement name="CVarCompare" cvar="iGSKBatteryCharges" operation="GT" value="@iGSKDmgPerc${strVar}Show" />
        <triggered_effect trigger="onSelfBuffUpdate" action="AddBuff" buff="buffGSKVisualEffect${strVar}ON"/>
        <triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="fGSKEn${strVar}" operation="set" value="@fGSKEn${strVar}CfgRO"/>
      </effect_group>
      
      <effect_group help="TURN OFF on too damaged for ${strVar}">
        <requirement name="CVarCompare" cvar="bGSKEnergy${strVar}" operation="Equals" value="1" />
        <requirement name="CVarCompare" cvar="fGSKDmgPerc${strVar}" operation="GTE" value="0.95" />
        <triggered_effect trigger="onSelfBuffUpdate" action="AddBuff" buff="buffGSKVisualEffect${strVar}OFF"/>
        <triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="fGSKEn${strVar}" operation="set" value="0"/>
      </effect_group>
      
      <!-- BLINK EFFECT FOR ${strVar} ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
      <effect_group name="Blink: Off then go ON for ${strVar} on low energy vs dmg"> 
        <requirement name="CVarCompare" cvar="bGSKEnergy${strVar}" operation="Equals" value="1" />
        <requirement name="CVarCompare" cvar="iGSKBatteryCharges" operation="LTE" value="@iGSKDmgPerc${strVar}Show" />
        <requirement name="CVarCompare" cvar="iGSKBatteryCharges" operation="GT" value="0" />

        <triggered_effect trigger="onSelfBuffUpdate" action="AddBuff" buff="buffGSKVisualEffect${strVar}BlinkOffThenGoOn">
          <requirement name="CVarCompare" cvar="fGSKBlinkAfter${strVar}" operation="LTE" value="0" />
        </triggered_effect>
        
        <triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="fGSKEn${strVar}" operation="set" value="${fStandbyEnergySpent}">
          <requirement name="CVarCompare" cvar="fGSKBlinkAfter${strVar}" operation="LTE" value="0" />
        </triggered_effect>
        <triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="fGSKEn${strVar}" operation="set" value="@fGSKEn${strVar}CfgRO">
          <requirement name="CVarCompare" cvar="fGSKBlinkAfter${strVar}" operation="GT" value="0" />
        </triggered_effect>
        
        <triggered_effect help="FixTinyRandomFloat:was fGSKBlinkAfter${strVar} set randomFloat(0.25,10.00)" trigger="onSelfBuffUpdate" action="ModifyCVar" cvar=".fGSKFixTinyRandomFloatTmp" operation="set" value="randomInt(250,10000)"/>        <triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar=".fGSKFixTinyRandomFloatTmp" operation="divide" value="1000" help="FixTinyRandomFloat"/>        <triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="fGSKBlinkAfter${strVar}" operation="set" value="@.fGSKFixTinyRandomFloatTmp" help="keep min value in sync with fGSKNVEnUseUpdRate;FixTinyRandomFloat: was randomFloat(0.25,10.00)"> <!-- HELPGOOD:FixTinyRandomFloat:OriginalLineData:LineNumber=36:        <triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="fGSKBlinkAfter${strVar}" operation="set" value="randomFloat(0.25,10.00)" help="keep min value in sync with fGSKNVEnUseUpdRate"> -->
          <requirement name="CVarCompare" cvar="fGSKBlinkAfter${strVar}" operation="LTE" value="0" />
        </triggered_effect>
        <triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="fGSKBlinkAfter${strVar}" operation="multiply" value="@fGSKDmgPerc${strVar}" help="this makes the player want to keep it in good condition"/>
        <triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="fGSKBlinkAfter${strVar}" operation="set" value="@fGSKNVEnUseUpdRate">
          <requirement name="CVarCompare" cvar="fGSKBlinkAfter${strVar}" operation="LT" value="@fGSKNVEnUseUpdRate" />
        </triggered_effect>
      </effect_group>
      
      <effect_group name="Blink: On then go Off for ${strVar} on no energy"> 
        <requirement name="CVarCompare" cvar="bGSKEnergy${strVar}" operation="Equals" value="1" />
        <requirement name="CVarCompare" cvar="iGSKBatteryCharges" operation="LTE" value="0" />

        <triggered_effect trigger="onSelfBuffUpdate" action="AddBuff" buff="buffGSKVisualEffect${strVar}BlinkOnThenGoOff">
          <requirement name="CVarCompare" cvar="fGSKBlinkAfter${strVar}" operation="LTE" value="0" />
        </triggered_effect>
        
        <triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="fGSKEn${strVar}" operation="set" value="@fGSKEn${strVar}CfgRO">
          <requirement name="CVarCompare" cvar="fGSKBlinkAfter${strVar}" operation="LTE" value="0" />
        </triggered_effect>
        <triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="fGSKEn${strVar}" operation="set" value="${fStandbyEnergySpent}">
          <requirement name="CVarCompare" cvar="fGSKBlinkAfter${strVar}" operation="GT" value="0" />
        </triggered_effect>
        
        <triggered_effect help="FixTinyRandomFloat:was fGSKBlinkAfter${strVar} set randomFloat(0.25,2.00)" trigger="onSelfBuffUpdate" action="ModifyCVar" cvar=".fGSKFixTinyRandomFloatTmp" operation="set" value="randomInt(250,2000)"/>        <triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar=".fGSKFixTinyRandomFloatTmp" operation="divide" value="1000" help="FixTinyRandomFloat"/>        <triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="fGSKBlinkAfter${strVar}" operation="set" value="@.fGSKFixTinyRandomFloatTmp" help="keep min value in sync with fGSKNVEnUseUpdRate;FixTinyRandomFloat: was randomFloat(0.25,2.00)"> <!-- HELPGOOD:FixTinyRandomFloat:OriginalLineData:LineNumber=60:        <triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="fGSKBlinkAfter${strVar}" operation="set" value="randomFloat(0.25,2.00)" help="keep min value in sync with fGSKNVEnUseUpdRate"> -->
          <requirement name="CVarCompare" cvar="fGSKBlinkAfter${strVar}" operation="LTE" value="0" />
        </triggered_effect>
      </effect_group>
      
      <effect_group help="blink countdown for ${strVar}">
        <requirement name="CVarCompare" cvar="bGSKEnergy${strVar}" operation="Equals" value="1" />
        <requirement name="CVarCompare" cvar="iGSKBatteryCharges" operation="LTE" value="@iGSKDmgPerc${strVar}Show" />
        <!-- 2nd UPDATE the blink DELAY (must come after being set to a random value, because if but b4 it, fGSKBlinkAfter would never be 0 to be checked on the 3rd step!) -->
        <triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="fGSKBlinkAfter${strVar}" operation="subtract" value="@fGSKNVEnUseUpdRate">
          <requirement name="CVarCompare" cvar="fGSKBlinkAfter${strVar}" operation="GT" value="0" />
        </triggered_effect>
      </effect_group>
      
EOF
