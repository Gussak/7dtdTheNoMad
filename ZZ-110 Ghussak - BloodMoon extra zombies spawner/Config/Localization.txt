Key,English

dkGSKAllowExtraBloodMoonSpawns,"Timer:{cvar(.iGSKBMCountToHold:0)}/{cvar(iGSKCfgBMCountOnHoldLimit:0)}(will hold spawning when negative), LurePseudoSound:{cvar(.iGSKBMLureZombiesPseudoSound:0)}\n Spawn extra zombies count down: Special:{cvar(.iGSKBMCountToSpawnZombSpecial:0)}, RadCommon:{cvar(.iGSKBMCountToSpawnZombRadCommon:0)}, Flying:{cvar(.iGSKBMCountToSpawnZombFlying:0)}, RadStrong:{cvar(.iGSKBMCountToSpawnZombRadStrong:0)}, Weak:{cvar(.iGSKBMCountToSpawnZombWeak:0)}, Strong:{cvar(.iGSKBMCountToSpawnZombStrong:0)}, Feral:{cvar(.iGSKBMCountToSpawnZombFeral:0)}\n FoesStillAlive:{cvar(.iGSKBMFoeAliveCount:0)}/{cvar(iGSKBMFoeAliveMax:0)}\nYou can use GSKCFGExtraBloodMoonFoeLimit.\nAnd use GSKCFGAllowExtraBloodMoonSpawns to:\n Standing:[PRIMARY]:Enable=2, EnableWithAutoCfgs=3\n Standing:[SECONDARY]:Disable=1\n  AllowExtraBloodMoonSpawns(CFGv1)={cvar(iGSKAllowExtraBloodMoonSpawns:0)}\n Crouched:[PRIMARY]:IncreasesHoldTime:\n Crouched:[SECONDARY]:DecreasesHoldTime:\n  HoldSpawningsFor(CFGv2):{cvar(iGSKCfgBMCountOnHoldLimit:0)}*-1*10s (so, a negative big value means more hold time)\nISSUE: (ETC*13) workaround KeepRunningAsPlayerWasShelteredFor:{cvar(iGSKBMKeepRunningToLetSpawnsWork:0)}"

dkGSKCFGExtraBloodMoonFoeLimit,"PRIMARY +2\nSECONDARY -2\n iGSKBMFoeAliveMax={cvar(iGSKBMFoeAliveMax:0)}"
